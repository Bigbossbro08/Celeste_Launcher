<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="srtPasswordConfirmNotMatch" xml:space="preserve">
    <value>Valor de contraseña y de confirmación no coinciden!</value>
  </data>
  <data name="strAlreadyLoged" xml:space="preserve">
    <value>Sesión ya iniciada o en proceso de iniciarse!</value>
  </data>
  <data name="strCloseGameFirst" xml:space="preserve">
    <value>Necesitas cerrar el juego primero!</value>
  </data>
  <data name="strEMail" xml:space="preserve">
    <value>Correo</value>
  </data>
  <data name="strErrorTimeout" xml:space="preserve">
    <value>Error: tiempo de espera alcanzado!</value>
  </data>
  <data name="strGameAlreadyRunning" xml:space="preserve">
    <value>El juego ya se está ejecutando!</value>
  </data>
  <data name="strInvalidEmail" xml:space="preserve">
    <value>Correo inválido!</value>
  </data>
  <data name="strInvalidInviteCode" xml:space="preserve">
    <value>Código de invitación inválido!</value>
  </data>
  <data name="strInvalidPassordLength" xml:space="preserve">
    <value>La longitud mínima de la contraseña es 8 caracteres, la longitud máxima es 32 caracteres!</value>
  </data>
  <data name="strInvalidUserName" xml:space="preserve">
    <value>Nombre de usuario inválido, solo letras y dígitos son permitidos, longitud mínima de 3 caracteres y logitud máxima de 15!</value>
  </data>
  <data name="strNotLoggedIn" xml:space="preserve">
    <value>Sesión no iniciada!</value>
  </data>
  <data name="strPasswordChanged" xml:space="preserve">
    <value>Contraseña cambiada con éxito.</value>
  </data>
  <data name="strPasswordMaxLength" xml:space="preserve">
    <value>Longitud máxima de la contraseña es 32 caracteres!</value>
  </data>
  <data name="strPasswordMinimunLength" xml:space="preserve">
    <value>Longitud mínima de la contraseña es 8 caracteres!</value>
  </data>
  <data name="strPasswordsNotMatch" xml:space="preserve">
    <value>Valor de contraseña nueva y de confirmación no conciden!</value>
  </data>
  <data name="strRank" xml:space="preserve">
    <value>Rango</value>
  </data>
  <data name="strRegisteredSuccess" xml:space="preserve">
    <value>Registrado con éxito.</value>
  </data>
  <data name="strServerConectionTimeot" xml:space="preserve">
    <value>Tiempo de espera de conexión con el servidor alcanzado (&gt; 20seg)!</value>
  </data>
  <data name="strServerOffline" xml:space="preserve">
    <value>Servidor fuera de línea</value>
  </data>
  <data name="strServerResponseTimeot" xml:space="preserve">
    <value>Tiempo de espera de respuesta del servidor alcanzado (&gt; 20seg)!</value>
  </data>
  <data name="strUpnpDeviceNotFound" xml:space="preserve">
    <value>Error: dispositivo Upnp no encontrado! Configura "Mapeo de Puertos" a manual en "Opciones MP" y configura tu enrutador.</value>
  </data>
  <data name="strUserName" xml:space="preserve">
    <value>Usuario</value>
  </data>
  <data name="strYouHaveBeenDisconnected" xml:space="preserve">
    <value>Has sido desconectado del servidor!</value>
  </data>
</root>